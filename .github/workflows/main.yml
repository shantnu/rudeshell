# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    # paths:
    #   - 'rudeshell_go/**'
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: shantnutiwari/rudeshell
      #     tags: |
      #         type=sha,prefix={{branch}}-

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./rudeshell_go
      #     file: ./rudeshell_go/Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! $GITHUB_WORKSPACE

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
            PRIVATE_KEY: ${{ secrets.AWS_SSH_KEY  }}
            HOSTNAME : ${{ secrets.AWS_IP  }}
            USER_NAME : ${{ secrets.AWS_USERNAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          cd /home/ubuntu/rudeshell && pwd && git reset --hard origin/main &&
            git pull origin main && docker-compose up --force-recreate --build -d && docker image prune -f
            '
